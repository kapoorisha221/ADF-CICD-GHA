# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
permissions:
  id-token: write
  contents: read
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          ref: adf_publish
      - name: Install Az PowerShell module
        run: if('${{ inputs.skipAzModuleInstallation }}' -ne 'true') { Install-Module -Name Az -Scope CurrentUser -Repository PSGallery -Force }
        shell: pwsh
      # - name: Azure CLI Login
      #   run: az login
      - name: OIDC Login to Azure Public Cloud with AzPowershell (enableAzPSSession true)
        uses: azure/login@v2
        with:
          client-id: 44ce4d40-3a24-4af1-a1f8-48595467f379
          tenant-id: d761e4c1-1cf1-4a04-be8d-709671979248
          subscription-id: 4687c1ca-c1ae-47e0-ae76-60a68ee370d3
          client-secret: VK48Q~ji4CqvFV-vHfpILzJ7w3ewjTvkuCyErb1k
          enable-AzPSSession: true
      - name: Azure Blob Upload
  # You may pin to the exact commit or the version.
  # uses: LanceMcCarthy/Action-AzureBlobUpload@ce90b2d1f7a7f0ddf7402d6be82efe0fb5c34283
        uses: LanceMcCarthy/Action-AzureBlobUpload@v3.1.2
        with:
    # Azure Storage ConnectionString for the container (Azure Portal - select Storage Account - Access Keys blade).
          connection_string: DefaultEndpointsProtocol=https;AccountName=teststorageadf9999;AccountKey=rCAyldQUU/vXxi3ZcIOQN9EX7F1fsuafADcX4GQJjwyhpI/YPc12YrkWDUrq6W9izJBCt/GLiM51+AStoJmn+g==;EndpointSuffix=core.windows.net
    # Blob Container name (e.g. my-container).
          container_name: test
    # The local folder containing all the files and subfolders to upload to the blob container (use a trailing slash).
          source_folder: adfdevesha
    # The target folder to use in the blob container with (do not use a leading or trail
          is_recursive: trye
    # If the blob exists it will be skipped, unless this is set to true.
    
          
          
      - name: Run Pre-deployment script
        shell: pwsh
        run: pwsh adfdevesha/trigger.ps1 -armTemplate adfdevesha/ARMTemplateForFactory.json  -ResourceGroupName testrg -DataFactoryName adfprodesha -predeployment:$True -deleteDeployment:$False
      
      - name: data-factory-deploy
        uses: Azure/data-factory-deploy-action@v1.2.0
        with:
          # Data Factory resource group name
          resourceGroupName: testrg
          # Data factory name
          dataFactoryName: adfprodesha
    # ARM template file name
          armTemplateFile: adfdevesha/ARMTemplateForFactory.json
    # ARM template parameters file name
          armTemplateParametersFile: adfdevesha/ARMTemplateParametersForFactory.json
    # Parameters which will be replaced in the ARM template
          additionalParameters: 'factoryName=adfprodesha'
      - name: Run Pre-deployment script
        shell: pwsh
        run: pwsh adfdevesha/trigger.ps1 -armTemplate adfdevesha/ARMTemplateForFactory.json  -ResourceGroupName testrg -DataFactoryName adfprodesha -predeployment:$False -deleteDeployment:$True
      
    
          
